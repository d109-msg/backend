<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
        namespace="com.ssafy.msg.chat.model.mapper.ChatMapper">

    <select id="getPersonalRoomsInfoById" parameterType="int"
            resultType="RoomResponseDto">
        SELECT r.id,
               p.last_message_id,
               r.data_type,
               r.create_time,
               r.end_time,
               r.start_time,
               p2.nickname AS title, -- 다른 참여자의 닉네임
               p2.image_url, -- 다른 참여자의 이미지 URL
               r.flag_available
        FROM rooms r
                 JOIN participants p ON r.id = p.room_id AND p.user_id = #{id}
                 JOIN participants p2 ON r.id = p2.room_id AND p2.user_id != #{id}
        WHERE r.data_type = "개인";
    </select>

    <select id="findRoom" parameterType="CreateRoomDto"
            resultType="RoomDto">
        SELECT r.*
        FROM rooms r
                 JOIN participants p1 ON r.id = p1.room_id
                 JOIN participants p2 ON r.id = p2.room_id
        WHERE p1.user_id = #{userId1}
          AND p2.user_id = #{userId2} and r.data_type = "개인";
    </select>

    <select id="getRoom" parameterType="string"
            resultType="RoomDto">
        select *
        from rooms
        where id =
              #{id}
    </select>

    <insert id="createRoom" parameterType="RoomDto">
        insert into rooms
            (id, data_type, create_time, title, image_url) values (#{id}, #{dataType}, now(), #{title}, #{imageUrl})
    </insert>

    <insert id="enterRoom" parameterType="ParticipantDto">
        insert into participants
            (room_id, user_id, image_url, nickname) values (#{roomId}, #{userId}, #{imageUrl}, #{nickname})
    </insert>

</mapper>

